import IssueCard from "./IssueCard";import { GitHubIssue } from "@/types/github";interface ExtendedIssue extends GitHubIssue {  summary: string;  difficulty: "Easy" | "Medium" | "Hard" | "Unknown";}interface IssueListProps {  issues: ExtendedIssue[];  loading: boolean;  bookmarks: number[];  toggleBookmark: (issueNumber: number) => void;}export default function IssueList({ issues, loading, bookmarks, toggleBookmark }: IssueListProps) {  if (loading) {    return <p className="text-center mt-6 text-blue-500">‚è≥ Loading issues...</p>;  }  if (issues.length === 0) {    return <p className="text-center text-gray-400 mt-8">No issues match this filter.</p>;  }  return (    <ul className="mt-8 space-y-4">      {issues.map((issue) => (        <IssueCard          key={issue.number}          issue={issue}          isBookmarked={bookmarks.includes(issue.number)}          onBookmark={() => toggleBookmark(issue.number)}          onRemoveBookmark={() => toggleBookmark(issue.number)}        />      ))}    </ul>  );}